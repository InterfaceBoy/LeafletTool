{"remainingRequest":"/Users/heyuanpeng/个人项目/grid/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/heyuanpeng/个人项目/grid/src/components/pieValue.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/heyuanpeng/个人项目/grid/src/components/pieValue.vue","mtime":1586942496845},{"path":"/Users/heyuanpeng/个人项目/grid/node_modules/cache-loader/dist/cjs.js","mtime":1573543948041},{"path":"/Users/heyuanpeng/个人项目/grid/node_modules/babel-loader/lib/index.js","mtime":1586942665794},{"path":"/Users/heyuanpeng/个人项目/grid/node_modules/cache-loader/dist/cjs.js","mtime":1573543948041},{"path":"/Users/heyuanpeng/个人项目/grid/node_modules/vue-loader/lib/index.js","mtime":1573543948284}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport IEcharts from \"vue-echarts-v3\";\nimport EventBus from \"../utils/EventBus.js\";\n\nexport default {\n  name: \"indexRanking\",\n  data() {\n    return {\n      alertValue: \"\",\n      alertJudge: \"\",\n      criticalValue1: \"\",\n      criticalValue2: \"\",\n      criticalValue3: \"\",\n      explainJudge: \"\",\n      indexValue: \"\",\n      goodColor: \"#2a7804\",\n      notGoodColor: \"#047878\",\n      generalColor: \"#f7d307\",\n      riskColor: \"#f7a307\",\n      indexRankingData: []\n    };\n  },\n  components: {\n    IEcharts\n  },\n  props: {\n    propsConfig: {\n      type: Object\n    },\n    date: {\n      type: String\n    },\n    loading: {\n      type: Boolean\n    }\n  },\n  watch: {\n    propsConfig() {\n      this.alertValue = this.propsConfig.alertValue;\n      this.alertJudge = this.propsConfig.alertJudge;\n      this.criticalValue1 = this.propsConfig.criticalValue1;\n      this.criticalValue2 = this.propsConfig.criticalValue2;\n      this.criticalValue3 = this.propsConfig.criticalValue3;\n      this.explainJudge = this.propsConfig.explainJudge;\n      this.indexValue = this.propsConfig.indexValue;\n      this.indexRankingData = this.propsConfig.indexRankingData;\n    }\n  },\n  beforeMount() {\n    EventBus.$on(\"showMapByshape\", this.showMap);\n  },\n  methods: {\n    showMap(instance) {\n      this.$store.state.barInfo = {\n        barName: instance.name,\n        barColor: instance.color,\n        barData: instance.data\n      };\n      EventBus.$emit(\"clearLayerStyle\");\n    }\n  },\n  computed: {\n    rankingTitle() {\n      return `网格等级评价`;\n    },\n    // 饼图\n    pie() {\n      let lengdData = [];\n      let data = [];\n      let _this = this;\n      if (this.indexRankingData.length > 0) {\n        data = this.indexRankingData.map(item => {\n          lengdData.push(item[0]);\n          return { value: item[1], name: item[0] };\n        });\n      }\n      let option = {\n        // title: {\n        //   text: \"南丁格尔玫瑰图\",\n        //   subtext: \"纯属虚构\",\n        //   x: \"center\"\n        // },\n        tooltip: {\n          trigger: \"item\",\n          position: function(pos, params, dom, rect, size) {\n            // 鼠标在左侧时 tooltip 显示到右侧，鼠标在右侧时 tooltip 显示到左侧。\n            var obj = { top: 60 };\n            obj[[\"left\", \"right\"][+(pos[0] < size.viewSize[0] / 2)]] = 5;\n            return obj;\n          },\n          formatter: \"{b}<br/>{c} ({d}%)\",\n          textStyle: {},\n          confine: true,\n          enterable: false //鼠标是否可以移动到tooltip区域内\n        },\n        legend: {\n          show: false,\n          x: \"center\",\n          y: \"bottom\",\n          data: lengdData\n        },\n        toolbox: {\n          show: false,\n          feature: {\n            mark: { show: true },\n            dataView: { show: true, readOnly: false },\n            magicType: {\n              show: true,\n              type: [\"pie\", \"funnel\"]\n            },\n            restore: { show: true },\n            saveAsImage: { show: true }\n          }\n        },\n        calculable: true,\n        series: [\n          {\n            name: \"\",\n            type: \"pie\",\n            radius: \"100%\",\n            // center: [\"25%\", \"50%\"],\n            roseType: \"radius\",\n            label: {\n              normal: {\n                show: false\n              },\n              emphasis: {\n                show: false\n              }\n            },\n            itemStyle: {\n              emphasis: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: \"rgba(0, 0, 0, 0.5)\"\n              },\n              normal: {\n                color: function(params) {\n                  let gridValue = params.value;\n                  if (\n                    _this.explainJudge === \"forward\" ||\n                    _this.propsConfig.explainJudge === \"forward\"\n                  ) {\n                    if (gridValue < _this.propsConfig.criticalValue1) {\n                      return _this.riskColor;\n                    } else if (\n                      gridValue > _this.propsConfig.criticalValue1 &&\n                      gridValue < _this.propsConfig.criticalValue2\n                    ) {\n                      return _this.generalColor;\n                    } else if (\n                      gridValue > _this.propsConfig.criticalValue2 &&\n                      gridValue < _this.propsConfig.criticalValue3\n                    ) {\n                      return _this.notGoodColor;\n                    } else if (gridValue > _this.propsConfig.criticalValue3) {\n                      return _this.goodColor;\n                    }\n                  } else if (\n                    _this.explainJudge === \"negative\" ||\n                    _this.propsConfig.explainJudge === \"negative\"\n                  ) {\n                    if (gridValue < _this.propsConfig.criticalValue1) {\n                      return _this.goodColor;\n                    } else if (\n                      gridValue > _this.propsConfig.criticalValue1 &&\n                      gridValue < _this.propsConfig.criticalValue2\n                    ) {\n                      return _this.notGoodColor;\n                    } else if (\n                      gridValue > _this.propsConfig.criticalValue2 &&\n                      gridValue < _this.propsConfig.criticalValue3\n                    ) {\n                      return _this.generalColor;\n                    } else if (gridValue > _this.propsConfig.criticalValue3) {\n                      return _this.riskColor;\n                    }\n                  }\n                }\n              }\n            },\n            lableLine: {\n              length: 1,\n              length2: 1,\n              normal: {\n                show: false\n              },\n              emphasis: {\n                show: false\n              }\n            },\n            data: data\n          }\n        ]\n      };\n      return option;\n    }\n  }\n};\n",{"version":3,"sources":["pieValue.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAefile":"pieValue.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"shapeEcharts\">\n    <div class=\"index\">\n      <div class=\"index-top\">\n        <span class=\"left\">{{rankingTitle}}</span>\n        <span class=\"right\">+</span>\n      </div>\n      <div class=\"index-content\">\n        <IEcharts ref=\"echarts\" :option=\"pie\" :loading=\"loading\" :resizable=\"true\" @click=\"showMap\"></IEcharts>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport IEcharts from \"vue-echarts-v3\";\nimport EventBus from \"../utils/EventBus.js\";\n\nexport default {\n  name: \"indexRanking\",\n  data() {\n    return {\n      alertValue: \"\",\n      alertJudge: \"\",\n      criticalValue1: \"\",\n      criticalValue2: \"\",\n      criticalValue3: \"\",\n      explainJudge: \"\",\n      indexValue: \"\",\n      goodColor: \"#2a7804\",\n      notGoodColor: \"#047878\",\n      generalColor: \"#f7d307\",\n      riskColor: \"#f7a307\",\n      indexRankingData: []\n    };\n  },\n  components: {\n    IEcharts\n  },\n  props: {\n    propsConfig: {\n      type: Object\n    },\n    date: {\n      type: String\n    },\n    loading: {\n      type: Boolean\n    }\n  },\n  watch: {\n    propsConfig() {\n      this.alertValue = this.propsConfig.alertValue;\n      this.alertJudge = this.propsConfig.alertJudge;\n      this.criticalValue1 = this.propsConfig.criticalValue1;\n      this.criticalValue2 = this.propsConfig.criticalValue2;\n      this.criticalValue3 = this.propsConfig.criticalValue3;\n      this.explainJudge = this.propsConfig.explainJudge;\n      this.indexValue = this.propsConfig.indexValue;\n      this.indexRankingData = this.propsConfig.indexRankingData;\n    }\n  },\n  beforeMount() {\n    EventBus.$on(\"showMapByshape\", this.showMap);\n  },\n  methods: {\n    showMap(instance) {\n      this.$store.state.barInfo = {\n        barName: instance.name,\n        barColor: instance.color,\n        barData: instance.data\n      };\n      EventBus.$emit(\"clearLayerStyle\");\n    }\n  },\n  computed: {\n    rankingTitle() {\n      return `网格等级评价`;\n    },\n    // 饼图\n    pie() {\n      let lengdData = [];\n      let data = [];\n      let _this = this;\n      if (this.indexRankingData.length > 0) {\n        data = this.indexRankingData.map(item => {\n          lengdData.push(item[0]);\n          return { value: item[1], name: item[0] };\n        });\n      }\n      let option = {\n        // title: {\n        //   text: \"南丁格尔玫瑰图\",\n        //   subtext: \"纯属虚构\",\n        //   x: \"center\"\n        // },\n        tooltip: {\n          trigger: \"item\",\n          position: function(pos, params, dom, rect, size) {\n            // 鼠标在左侧时 tooltip 显示到右侧，鼠标在右侧时 tooltip 显示到左侧。\n            var obj = { top: 60 };\n            obj[[\"left\", \"right\"][+(pos[0] < size.viewSize[0] / 2)]] = 5;\n            return obj;\n          },\n          formatter: \"{b}<br/>{c} ({d}%)\",\n          textStyle: {},\n          confine: true,\n          enterable: false //鼠标是否可以移动到tooltip区域内\n        },\n        legend: {\n          show: false,\n          x: \"center\",\n          y: \"bottom\",\n          data: lengdData\n        },\n        toolbox: {\n          show: false,\n          feature: {\n            mark: { show: true },\n            dataView: { show: true, readOnly: false },\n            magicType: {\n              show: true,\n              type: [\"pie\", \"funnel\"]\n            },\n            restore: { show: true },\n            saveAsImage: { show: true }\n          }\n        },\n        calculable: true,\n        series: [\n          {\n            name: \"\",\n            type: \"pie\",\n            radius: \"100%\",\n            // center: [\"25%\", \"50%\"],\n            roseType: \"radius\",\n            label: {\n              normal: {\n                show: false\n              },\n              emphasis: {\n                show: false\n              }\n            },\n            itemStyle: {\n              emphasis: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: \"rgba(0, 0, 0, 0.5)\"\n              },\n              normal: {\n                color: function(params) {\n                  let gridValue = params.value;\n                  if (\n                    _this.explainJudge === \"forward\" ||\n                    _this.propsConfig.explainJudge === \"forward\"\n                  ) {\n                    if (gridValue < _this.propsConfig.criticalValue1) {\n                      return _this.riskColor;\n                    } else if (\n                      gridValue > _this.propsConfig.criticalValue1 &&\n                      gridValue < _this.propsConfig.criticalValue2\n                    ) {\n                      return _this.generalColor;\n                    } else if (\n                      gridValue > _this.propsConfig.criticalValue2 &&\n                      gridValue < _this.propsConfig.criticalValue3\n                    ) {\n                      return _this.notGoodColor;\n                    } else if (gridValue > _this.propsConfig.criticalValue3) {\n                      return _this.goodColor;\n                    }\n                  } else if (\n                    _this.explainJudge === \"negative\" ||\n                    _this.propsConfig.explainJudge === \"negative\"\n                  ) {\n                    if (gridValue < _this.propsConfig.criticalValue1) {\n                      return _this.goodColor;\n                    } else if (\n                      gridValue > _this.propsConfig.criticalValue1 &&\n                      gridValue < _this.propsConfig.criticalValue2\n                    ) {\n                      return _this.notGoodColor;\n                    } else if (\n                      gridValue > _this.propsConfig.criticalValue2 &&\n                      gridValue < _this.propsConfig.criticalValue3\n                    ) {\n                      return _this.generalColor;\n                    } else if (gridValue > _this.propsConfig.criticalValue3) {\n                      return _this.riskColor;\n                    }\n                  }\n                }\n              }\n            },\n            lableLine: {\n              length: 1,\n              length2: 1,\n              normal: {\n                show: false\n              },\n              emphasis: {\n                show: false\n              }\n            },\n            data: data\n          }\n        ]\n      };\n      return option;\n    }\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n.shapeEcharts {\n  margin-top: 0.5rem;\n  .index {\n    width: 100%;\n    margin-bottom: 1rem;\n    .index-top {\n      height: 2rem;\n      line-height: 2rem;\n      vertical-align: middle;\n      background: rgba(16, 41, 67, 0.75);\n      border: 1px solid rgba(147, 147, 147, 0.75);\n      .left {\n        padding-left: 0.5rem;\n      }\n      .right {\n        float: right;\n        margin-right: 1rem;\n      }\n    }\n    .index-content {\n      font-size: 14px;\n      height: 16rem;\n      // height: 40%;\n      min-height: 40%;\n      padding: 1rem;\n      background: rgba(16, 41, 67, 0.8);\n      border: 1px solid rgba(147, 147, 147, 0.8);\n      border-top: none;\n      border-radius: 0px 0px 8px 8px;\n      span {\n        font-size: 16px;\n        font-weight: 600;\n        color: #ffc000;\n        margin: 0 0.2rem;\n      }\n    }\n  }\n}\n</style>\n"]}]}