{"remainingRequest":"/Users/heyuanpeng/个人项目/grid/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/heyuanpeng/个人项目/grid/src/components/indexRanking.vue?vue&type=style&index=0&id=70323914&scoped=true&lang=scss&","dependencies":[{"path":"/Users/heyuanpeng/个人项目/grid/src/components/indexRanking.vue","mtime":1586942496845},{"path":"/Users/heyuanpeng/个人项目/grid/node_modules/css-loader/index.js","mtime":1567574744060},{"path":"/Users/heyuanpeng/个人项目/grid/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1573543948284},{"path":"/Users/heyuanpeng/个人项目/grid/node_modules/postcss-loader/src/index.js","mtime":1565602920420},{"path":"/Users/heyuanpeng/个人项目/grid/node_modules/sass-loader/lib/loader.js","mtime":1568613755672},{"path":"/Users/heyuanpeng/个人项目/grid/node_modules/cache-loader/dist/cjs.js","mtime":1573543948041},{"path":"/Users/heyuanpeng/个人项目/grid/node_modules/vue-loader/lib/index.js","mtime":1573543948284}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.shapeEcharts {\n  .index {\n    width: 100%;\n    margin-bottom: 1rem;\n    .index-top {\n      height: 2rem;\n      line-height: 2rem;\n      vertical-align: middle;\n      background: #3a404e;\n      .left {\n        padding-left: 0.5rem;\n      }\n      .right {\n        float: right;\n        margin-right: 1rem;\n      }\n    }\n    .index-content {\n      font-size: 14px;\n      height: 13rem;\n      padding: 1rem;\n      background: #242c3b;\n      span {\n        font-size: 16px;\n        font-weight: 600;\n        color: #ffc000;\n        margin: 0 0.2rem;\n      }\n    }\n  }\n}\n",{"version":3,"sources":["indexRanking.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"indexRanking.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"shapeEcharts\">\n    <div class=\"index\">\n      <div class=\"index-top\">\n        <span class=\"left\">{{rankingTitle}}</span>\n        <span class=\"right\">+</span>\n      </div>\n      <div class=\"index-content\">\n        <IEcharts\n          ref=\"echarts\"\n          :option=\"shape\"\n          :loading=\"loading\"\n          :resizable=\"true\"\n          @click=\"showMap\"\n        ></IEcharts>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport IEcharts from \"vue-echarts-v3\";\nimport EventBus from \"../utils/EventBus.js\";\n\nexport default {\n  name: \"indexRanking\",\n  components: {\n    IEcharts\n  },\n  props: {\n    indexName: {\n      type: String,\n      required: true\n    },\n    data: {\n      type: Array\n    },\n    loading: {\n      type: Boolean\n    }\n  },\n  data() {\n    return {};\n  },\n  beforeMount() {\n    EventBus.$on(\"showMapByshape\", this.showMap);\n  },\n  methods: {\n    showMap(instance) {\n      this.$store.state.barInfo = {\n        barName: instance.name,\n        barColor: instance.color,\n        barData: instance.data\n      };\n      EventBus.$emit(\"clearLayerStyle\");\n    }\n  },\n  computed: {\n    rankingTitle() {\n      return `${this.indexName}综合排名`;\n    },\n    // 条形图\n    shape() {\n      let dataX = this.data.map(function(item) {\n        return item[0];\n      });\n      let dataY = this.data.map(function(item) {\n        return item[1];\n      });\n      let option = {\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: \"shadow\" // 默认为直线，可选为：'line' | 'shadow'\n          },\n          // 设置位置\n          position: function(pos, params, el, elRect, size) {\n            var obj = { top: 10 };\n            obj[[\"left\", \"right\"][+(pos[0] < size.viewSize[0] / 2)]] = 16;\n            return obj;\n          }\n        },\n        grid: {\n          left: \"-10%\",\n          right: \"0%\",\n          top: \"13%\",\n          bottom: \"-20%\",\n          containLabel: true\n        },\n        xAxis: [\n          {\n            type: \"category\",\n            data: dataX,\n            axisTick: {\n              show: false,\n              alignWithLabel: true\n            },\n            axisLabel: {\n              interVal: 0,\n              textStyle: {\n                color: \"#626262\",\n                fontSize: \"10\"\n              },\n              formatter: function(value) {\n                let ret = \"\"; //拼接加\\n返回的类目项\n                let maxLength = 2; //每项显示文字个数\n                let valLength = value.length; //X轴类目项的文字个数\n                let rowN = Math.ceil(valLength / maxLength); //类目项需要换行的行数\n                if (rowN > 1) {\n                  //如果类目项的文字大于3,\n                  for (let i = 0; i < rowN; i++) {\n                    let temp = \"\"; //每次截取的字符串\n                    let start = i * maxLength; //开始截取的位置\n                    var end = start + maxLength; //结束截取的位置 //这里也可以加一个是否是最后一行的判断，但是不加也没有影响，那就不加吧\n                    temp = value.substring(start, end) + \"\\n\";\n                    ret += temp; //凭借最终的字符串\n                  }\n                  return ret;\n                } else {\n                  return value;\n                }\n              }\n            },\n            axisLine: {\n              show: false\n            }\n          }\n        ],\n        yAxis: [\n          {\n            show: false,\n            type: \"value\"\n          }\n        ],\n        series: [\n          {\n            name: \"直接访问\",\n            type: \"bar\",\n            barWidth: \"30%\",\n            itemStyle: {\n              normal: {\n                barBorderRadius: 100,\n                label: {\n                  show: true, //开启显示\n                  position: \"top\", //在上方显示\n                  textStyle: {\n                    //数值样式\n                    color: \"color\",\n                    fontSize: 10,\n                    fontWeight: \"bold\"\n                  },\n                  formatter: function(v) {\n                    let showData = v.data;\n                    // return parseInt(showData) === showData\n                    //   ? parseInt(showData)\n                    //   : parseInt(showData).toFixed(2);\n                    return Number(showData).toFixed(2);\n                  }\n                },\n                color: function(idx) {\n                  var color = [\n                    \"#dc4e54\",\n                    \"#db8258\",\n                    \"#eda350\",\n                    \"#a6a34b\",\n                    \"#84aa6d\",\n                    \"#84abab\"\n                  ];\n                  return color[idx.dataIndex % color.length];\n                }\n              }\n            },\n            data: dataY\n          }\n        ]\n      };\n      return option;\n    }\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n.shapeEcharts {\n  .index {\n    width: 100%;\n    margin-bottom: 1rem;\n    .index-top {\n      height: 2rem;\n      line-height: 2rem;\n      vertical-align: middle;\n      background: #3a404e;\n      .left {\n        padding-left: 0.5rem;\n      }\n      .right {\n        float: right;\n        margin-right: 1rem;\n      }\n    }\n    .index-content {\n      font-size: 14px;\n      height: 13rem;\n      padding: 1rem;\n      background: #242c3b;\n      span {\n        font-size: 16px;\n        font-weight: 600;\n        color: #ffc000;\n        margin: 0 0.2rem;\n      }\n    }\n  }\n}\n</style>\n"]}]}