{"remainingRequest":"/Users/heyuanpeng/个人项目/grid/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/heyuanpeng/个人项目/grid/src/components/bottomMap.vue?vue&type=style&index=1&lang=css&","dependencies":[{"path":"/Users/heyuanpeng/个人项目/grid/src/components/bottomMap.vue","mtime":1586942496842},{"path":"/Users/heyuanpeng/个人项目/grid/node_modules/css-loader/index.js","mtime":1567574744060},{"path":"/Users/heyuanpeng/个人项目/grid/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1573543948284},{"path":"/Users/heyuanpeng/个人项目/grid/node_modules/postcss-loader/src/index.js","mtime":1565602920420},{"path":"/Users/heyuanpeng/个人项目/grid/node_modules/cache-loader/dist/cjs.js","mtime":1573543948041},{"path":"/Users/heyuanpeng/个人项目/grid/node_modules/vue-loader/lib/index.js","mtime":1573543948284}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.leaflet-div-icon {\n  background: transparent !important;\n  border: 1px solid transparent !important;\n}\n.red_point_alert {\n  position: relative;\n  width: 40px;\n  height: 40px;\n  z-index: 100 !important;\n}\n@keyframes warn {\n  0% {\n    transform: scale(0);\n    opacity: 0;\n  }\n\n  25% {\n    transform: scale(0);\n    opacity: 0.1;\n  }\n  30% {\n    transform: scale(0.1);\n    opacity: 0.1;\n  }\n  40% {\n    transform: scale(0.3);\n    opacity: 0.1;\n  }\n\n  50% {\n    transform: scale(0.4);\n    opacity: 0.3;\n  }\n  60% {\n    transform: scale(0.5);\n    opacity: 0.3;\n  }\n\n  75% {\n    transform: scale(0.6);\n    opacity: 0.5;\n  }\n\n  100% {\n    transform: scale(1);\n    opacity: 0;\n  }\n}\n\n/* 保持大小不变的小圆圈  */\n.dot {\n  position: absolute;\n  width: 6px;\n  height: 6px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  -webkit-border-radius: 20px;\n  -moz-border-radius: 20px;\n  border: 2px solid red;\n  border-radius: 20px;\n  z-index: 2;\n}\n\n/* 产生动画（向外扩散变大）的圆圈  */\n.pulse {\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  top: 20%;\n  left: 20%;\n  transform: translate(-50%, -50%);\n  border: 6px solid red;\n  -webkit-border-radius: 30px;\n  -moz-border-radius: 30px;\n  border-radius: 30px;\n  z-index: 1;\n  opacity: 0;\n  -webkit-animation: warn 2s ease-out;\n  -moz-animation: warn 2s ease-out;\n  animation: warn 2s ease-out;\n  -webkit-animation-iteration-count: infinite;\n  -moz-animation-iteration-count: infinite;\n  animation-iteration-count: infinite;\n}\n",{"version":3,"sources":["bottomMap.vue"],"names":[],"mappingsqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bottomMap.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"basemap\" id=\"map\">\n    <!-- 正向评价 -->\n    <div\n      class=\"map-legend\"\n      :style=\"{bottom:showBottom,right:showRight}\"\n      v-show=\"explainJudge==='forward' || this.propsConfig.explainJudge==='forward'\"\n    >\n      <h4>图列</h4>\n      <div class=\"map-info\">\n        <span class=\"color-area\" :style=\"{background:goodColor}\"></span>\n        <span class=\"fontColor\">健康</span>\n      </div>\n      <div class=\"map-info\">\n        <span class=\"color-area\" :style=\"{background:notGoodColor}\"></span>\n        <span class=\"fontColor\">良好</span>\n      </div>\n      <div class=\"map-info\">\n        <span class=\"color-area\" :style=\"{background:generalColor}\"></span>\n        <span class=\"fontColor\">一般</span>\n      </div>\n      <div class=\"map-info\">\n        <span class=\"color-area\" :style=\"{background:riskColor}\"></span>\n        <span class=\"fontColor\">可能存在风险</span>\n      </div>\n      <div class=\"map-info\">\n        <span class=\"color-area\" :style=\"{background:alertColor}\"></span>\n        <span class=\"fontColor\">预警</span>\n      </div>\n    </div>\n    <!-- 负向评价 -->\n    <div\n      class=\"map-legend\"\n      :style=\"{bottom:showBottom,right:showRight}\"\n      v-show=\"explainJudge==='negative' || this.propsConfig.explainJudge==='negative'\"\n    >\n      <h4>图列</h4>\n      <div class=\"map-info\">\n        <span class=\"color-area\" :style=\"{background:alertColor}\"></span>\n        <span class=\"fontColor\">预警</span>\n      </div>\n      <div class=\"map-info\">\n        <span class=\"color-area\" :style=\"{background:riskColor}\"></span>\n        <span class=\"fontColor\">可能存在风险</span>\n      </div>\n      <div class=\"map-info\">\n        <span class=\"color-area\" :style=\"{background:generalColor}\"></span>\n        <span class=\"fontColor\">一般</span>\n      </div>\n      <div class=\"map-info\">\n        <span class=\"color-area\" :style=\"{background:notGoodColor}\"></span>\n        <span class=\"fontColor\">良好</span>\n      </div>\n      <div class=\"map-info\">\n        <span class=\"color-area\" :style=\"{background:goodColor}\"></span>\n        <span class=\"fontColor\">健康</span>\n      </div>\n    </div>\n    <!-- 回到地图中心 -->\n    <div @click=\"goMapCenter()\" :style=\"{bottom:showBottom,right:showRight}\" class=\"goCenter-icon\">\n      <Icon type=\"ios-locate-outline\" size=\"18\" class=\"gomap-icon\"/>\n    </div>\n  </div>\n</template>\n\n<script>\nimport L from \"leaflet\";\nimport EventBus from \"../utils/EventBus.js\";\n\nexport default {\n  name: \"bottomMap\",\n  props: {\n    propsConfig: {\n      type: Object\n    },\n    indicatorsShow: {\n      type: Boolean,\n      required: false\n    },\n    gridType: {\n      type: String,\n      required: true\n    },\n    gridsAlert: {\n      type: Array,\n      required: true\n    },\n    secondLayerGeo: {\n      type: Object,\n      required: false\n    }\n  },\n  components: {},\n  data() {\n    return {\n      goodColor: \"#2a7804\",\n      notGoodColor: \"#047878\",\n      generalColor: \"#f7d307\",\n      riskColor: \"#f7a307\",\n      alertColor: \"#f71b07\",\n      baseUrl: process.env.BASE_URL,\n      map: null,\n      geojsonLayer: null,\n      gridsNum: [],\n      grids: \"\",\n      streetName: [],\n      criticalValue1: \"\", // 临界值1\n      criticalValue2: \"\", // 临界值2\n      criticalValue3: \"\", // 临界值3\n      alertJudge: \"\", // 阈值判断条件\n      explainJudge: \"\", // 临界值判断条件\n      indexValue: \"\", // 当前的值\n      streetsData: \"\", // 当前街道的值\n      alertStreet: \"\", // 预警的街道\n      alertLayers: []\n    };\n  },\n  computed: {\n    showBottom() {\n      if (this.indicatorsShow) {\n        return \"36%\";\n      } else {\n        return \"10%\";\n      }\n    },\n    showRight() {\n      if (this.indicatorsShow) {\n        return \"24%\";\n      } else {\n        return \"10%\";\n      }\n    }\n  },\n  // 回到地图中心\n  watch: {\n    gridType() {\n      this.addGridLayer();\n    },\n    propsConfig() {\n      this.criticalValue1 = this.propsConfig.criticalValue1;\n      this.criticalValue2 = this.propsConfig.criticalValue2;\n      this.criticalValue3 = this.propsConfig.criticalValue3;\n      this.alertJudge = this.propsConfig.alertJudge;\n      this.alertValue = this.propsConfig.alertValue;\n      this.explainJudge = this.propsConfig.explainJudge;\n      this.indexValue = this.propsConfig.indexValue;\n      this.streetsData = this.propsConfig.streetsData;\n      let alertStreet = [];\n      for (let key in this.streetsData) {\n        if (\n          this.alertValue < this.streetsData[key] &&\n          this.alertJudge === \"high\"\n        ) {\n          if (typeof this.$store.state.allStreetNameCode[key] != \"undefined\") {\n            alertStreet.push(this.$store.state.allStreetNameCode[key]);\n          }\n        } else if (\n          this.alertValue > this.streetsData[key] &&\n          this.alertJudge === \"low\"\n        ) {\n          if (typeof this.$store.state.allStreetNameCode[key] != \"undefined\") {\n            alertStreet.push(this.$store.state.allStreetNameCode[key]);\n          }\n        }\n      }\n      this.alertStreet = alertStreet;\n      this.addGridLayer();\n    }\n  },\n\n  beforeMount() {\n    EventBus.$on(\"clearLayerStyle\", this.clearStyle);\n  },\n  beforeDestroy() {\n    // EventBus.$off(\"clearLayerStyle\", this.clearStyle);\n  },\n  mounted() {\n    this.initMap();\n  },\n  methods: {\n    goMapCenter() {\n      if (this.gridType === \"community\") {\n        this.map.setView([39.918399, 116.408584], 11);\n      } else {\n        this.map.setView([39.918399, 116.408584], 11);\n      }\n    },\n    initMap() {\n      this.map = L.map(\"map\", {\n        zoomControl: false,\n        attributionControl: false\n      });\n      this.$store.state.bottomMap = this.map;\n      this.addGridLayer();\n      this.addMapInfo(this.map);\n      // 添加底图\n      new L.TileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n        attribution: '&copy; <a href=\" \">OpenStreetMap</a > contributors'\n      }).addTo(this.map);\n      // new L.TileLayer(mapboxUrl, {\n      //   attribution: \"dist\"\n      // }).addTo(this.map);\n    },\n    addGridLayer() {\n      let mapUrl = \"\";\n      switch (this.gridType) {\n        case \"street\":\n          // mapUrl = `${this.baseUrl}/static/streets.json`;\n          mapUrl = `${this.baseUrl}/static/spatialData/dc_jd.json`;\n          this.setViewGrid();\n          break;\n        case \"community\":\n          // mapUrl = `${this.baseUrl}/static/grid.json`;\n          mapUrl = `${this.baseUrl}/static/spatialData/dc_sq.json`;\n          this.setViewGrid();\n          break;\n        case \"grid\":\n          // mapUrl = `${this.baseUrl}/static/grid.json`;\n          mapUrl = `${this.baseUrl}/static/spatialData/dc_wg.json`;\n          this.setViewGrid();\n          break;\n        default:\n          // mapUrl = `${this.baseUrl}/static/grid.json`;\n          mapUrl = `${this.baseUrl}/static/spatialData/dc_wg.json`;\n          this.setViewGrid();\n          break;\n      }\n      this.$http.get(mapUrl).then(result => {\n        if (result.data && this.geojsonLayer != null) {\n          this.map.removeLayer(this.geojsonLayer);\n        }\n        let n = 1;\n        let streetNmae = [];\n        let allStreetName = [];\n        let allStreetNameCode = [];\n        let streetCode = [];\n        let streetNameCode = {};\n        // 街道个数\n        this.$store.state.streetNumber = result.data.features.length;\n        // FIXME: 处理街道名称保存到vuex中为二维数组\n        result.data.features.forEach(element => {\n          allStreetName.push(element.properties.JDNAME);\n          allStreetNameCode.push(element.properties.JDCODE);\n          if (this.propsConfig.streetsData !== \"\") {\n            if (typeof this.propsConfig.streetsData !== \"undefined\") {\n              element.properties.gridValue = String(\n                this.propsConfig.streetsData[element.properties.JDCODE]\n              );\n            }\n          }\n          streetNmae.push(element.properties.JDNAME);\n          streetCode.push(element.properties.JDCODE);\n          for (let i = 0; i < streetNmae.length; i++) {\n            streetNameCode[streetCode[i]] = streetNmae[i];\n          }\n          // 将街道号和对应的名字对象存入vuex\n          this.$store.state.streetNameCode = streetNameCode;\n\n          element.properties.girdIndex = n++;\n          this.streetName.push(element.properties.JDNAME);\n        });\n        let allStreetValue = this.transformObj(\n          allStreetNameCode,\n          allStreetName\n        );\n        this.$store.state.allStreetNameCode = allStreetValue;\n        this.$store.state.streetName = this.streetName.map((key, value) => {\n          return [key, value];\n        });\n        this.$store.state.streestName = this.streetName.map((key, value) => {\n          return [key, value];\n        });\n        this.geojsonLayer = L.geoJSON(result.data, {\n          style: this.style,\n          onEachFeature: this.onEachFeature\n        });\n        this.geojsonLayer.addTo(this.map);\n      });\n    },\n    // eslint-disable-next-line\n    style(feature) {\n      this.gridsNum = this.gridsAlert.map(item => {\n        return item[0].replace(/[^0-9]/gi, \"\");\n      });\n      //  处理单击网格预警文字单击事件\n      if (this.$store.state.GridsAlertText == feature.properties.JDNAME) {\n        return {\n          opacity: 1,\n          color: \"#0096A1\",\n          fillColor: \"#0096A1\",\n          weight: 2,\n          fillOpacity: 0.8\n        };\n      }\n      // 柱状图点击\n      if (this.$store.state.barInfo.barName == feature.properties.JDNAME) {\n        return {\n          opacity: 1,\n          color: `${this.$store.state.barInfo.barColor}`,\n          fillColor: `${this.$store.state.barInfo.barColor}`,\n          weight: 2,\n          fillOpacity: 0.8\n        };\n      }\n      const gridValue = feature.properties.gridValue;\n      // 预警\n      if (this.alertJudge === \"high\" && gridValue > this.alertValue) {\n        return {\n          opacity: 1,\n          color: this.alertColor,\n          fillColor: this.alertColor,\n          weight: 2,\n          fillOpacity: 0.8\n        };\n      } else if (this.alertJudge === \"low\" && gridValue < this.alertValue) {\n        return {\n          opacity: 1,\n          color: this.alertColor,\n          fillColor: this.alertColor,\n          weight: 2,\n          fillOpacity: 0.8\n        };\n      }\n      if (\n        this.explainJudge === \"forward\" ||\n        this.propsConfig.explainJudge === \"forward\"\n      ) {\n        if (gridValue < this.propsConfig.criticalValue1) {\n          // 低\n          return {\n            opacity: 1,\n            color: this.riskColor,\n            fillColor: this.riskColor,\n            weight: 2,\n            fillOpacity: 0.8\n          };\n        } else if (\n          gridValue > this.propsConfig.criticalValue1 &&\n          gridValue < this.propsConfig.criticalValue2\n        ) {\n          // 较低\n          return {\n            opacity: 1,\n            color: this.generalColor,\n            fillColor: this.generalColor,\n            weight: 2,\n            fillOpacity: 0.8\n          };\n        } else if (\n          gridValue > this.propsConfig.criticalValue2 &&\n          gridValue < this.propsConfig.criticalValue3\n          // 较高\n        ) {\n          return {\n            opacity: 1,\n            color: this.notGoodColor,\n            fillColor: this.notGoodColor,\n            weight: 2,\n            fillOpacity: 0.8\n          };\n        } else if (gridValue > this.propsConfig.criticalValue3) {\n          return {\n            opacity: 1,\n            color: this.goodColor,\n            fillColor: this.goodColor,\n            weight: 2,\n            fillOpacity: 0.8\n          };\n        } else {\n          return {\n            opacity: 1,\n            color: \"#2a7804\",\n            fillColor: \"#2a7804\",\n            dashArray: 3,\n            fillOpacity: 0.5\n          };\n        }\n      } else if (\n        // 负向评价\n        this.explainJudge === \"negative\" ||\n        this.propsConfig.explainJudge === \"negative\"\n      ) {\n        if (gridValue < this.propsConfig.criticalValue1) {\n          // 高\n          return {\n            opacity: 1,\n            color: this.goodColor,\n            fillColor: this.goodColor,\n            weight: 2,\n            fillOpacity: 0.8\n          };\n        } else if (\n          // 较高\n          gridValue > this.propsConfig.criticalValue1 &&\n          gridValue < this.propsConfig.criticalValue2\n        ) {\n          return {\n            opacity: 1,\n            color: this.notGoodColor,\n            fillColor: this.notGoodColor,\n            weight: 2,\n            fillOpacity: 0.8\n          };\n        } else if (\n          // 较低\n          gridValue > this.propsConfig.criticalValue2 &&\n          gridValue < this.propsConfig.criticalValue3\n        ) {\n          return {\n            opacity: 1,\n            color: this.generalColor,\n            fillColor: this.generalColor,\n            weight: 2,\n            fillOpacity: 0.8\n          };\n        } else if (gridValue > this.propsConfig.criticalValue3) {\n          // 低\n          return {\n            opacity: 1,\n            color: this.riskColor,\n            fillColor: this.riskColor,\n            weight: 2,\n            fillOpacity: 0.8\n          };\n        } else {\n          return {\n            opacity: 1,\n            color: \"#FFEBD6\",\n            fillColor: \"#FFEBD6\",\n            dashArray: 3,\n            fillOpacity: 0.5\n          };\n        }\n      }\n    },\n    // 两个数组转换为对象\n    transformObj(list, values) {\n      var result = {};\n      for (var i = 0; i < list.length; i++) {\n        if (values) {\n          result[list[i]] = values[i];\n        } else {\n          result[list[i][0]] = list[i][1];\n        }\n      }\n      return result;\n    },\n    // 加入图列显示\n    addMapInfo(map) {\n      let info = L.control();\n      info.onAdd = function() {\n        this._div = L.DomUtil.create(\"div\", \"info\"); // create a div with a class \"info\"\n        this.update();\n        return this._div;\n      };\n      /* eslint-disable */\n      info.update = function(props) {\n        this._div.innerHTML = \"\";\n      };\n      info.addTo(map);\n    },\n    mouseoutClear() {\n      this.geojsonLayer.getLayers().forEach(val => {\n        this.geojsonLayer.resetStyle(val);\n      });\n      this.map.closePopup();\n    },\n    // 清除地图的样式\n    clearStyle() {\n      this.geojsonLayer.getLayers().forEach(val => {\n        this.geojsonLayer.resetStyle(val);\n      });\n      if (this.alertLayers.length > 0) {\n        for (let i = 0; i < this.alertLayers.length; i++) {\n          this.map.removeLayer(this.alertLayers[i]);\n        }\n      }\n\n      this.map.closePopup();\n    },\n    clearSecondStyle() {\n      this.secondGeoLayer.getLayers().forEach(val => {\n        this.secondGeoLayer.resetStyle(val);\n      });\n      this.map.closePopup();\n    },\n    onEachSecondFeature(feature, layer) {\n      layer.on({\n        mouseover: this.showGridDesc,\n        mouseout: this.clearSecondStyle\n      });\n    },\n    // 重新设置当前layer的样式\n    resetStyle(e) {\n      if (this.geojsonLayer) {\n        this.geojsonLayer.resetStyle(e.target);\n        this.map.closePopup();\n      }\n    },\n    onEachFeature(feature, layer) {\n      layer.on({\n        mouseover: this.showGridDesc,\n        mouseout: this.mouseoutClear,\n        click: this.showGridIndexDetail\n      });\n      // let a = layer.getBounds().getCenter();\n      // console.log(a);\n      // 处理预警街道,添加marker FIXME:\n      // if (this.alertStreet.length > 0) {\n      //   this.alertStreet.forEach(item => {\n      //     if (item === layer.feature.properties.JDNAME) {\n      //       // geojson 坐标数组\n      //       let alertlat = layer.getBounds().getCenter();\n      //       let alertlatLang = [alertlat.lat, alertlat.lng];\n      //       // 添加预警\n      //       let myIcon = L.divIcon({\n      //         html:\n      //           \"<div class='red_point_alert'><div class='dot'></div><div class='pulse'></div></div>\"\n      //         // className: \"red_point_alert\"\n      //       });\n      //       let marker = L.marker(alertlatLang, { icon: myIcon });\n      //       this.alertLayers.push(marker);\n      //       marker.addTo(this.map);\n      //     }\n      //   });\n      // }\n    },\n    // 鼠标移动事件\n    showGridDesc(e) {\n      const layer = e.target;\n      layer.setStyle({\n        weight: 3,\n        color: \"#012134\",\n        opacity: 0.5,\n        dashArray: 3,\n        fillColor: `${e.target.options.color}`,\n        fillOpacity: 1\n      });\n      let latlng = layer.getCenter();\n      L.popup({ closeButton: false })\n        .setLatLng(latlng)\n        .setContent(\n          `${layer.feature.properties[\"JDNAME\"]} ${\n            layer.feature.properties[\"gridValue\"]\n          } `\n        )\n        .openOn(this.map);\n    },\n    // 点击事件\n    showGridIndexDetail(e) {\n      const layer = e.target;\n      this.geojsonLayer.resetStyle(this.geojsonLayer.getLayers()[0]);\n      layer.setStyle({\n        weight: 3,\n        opacity: 0.5,\n        dashArray: 3,\n        fillColor: `${e.target.options.fillColor}`,\n        fillOpacity: 0.5\n      });\n      const props = layer.feature.properties;\n      let id = \"\";\n      let name = \"\";\n      switch (this.gridType) {\n        case \"street\":\n          id = props[\"JDCODE\"];\n          name = props[\"JDNAME\"];\n          break;\n        case \"community\":\n          id = props[\"JDCODE\"];\n          name = props[\"JDNAME\"] || props[\"unit_name\"];\n          break;\n        case \"grid\":\n          id = props[\"JDCODE\"];\n          name = props[\"JDNAME\"] || props[\"unit_name\"];\n          break;\n        default:\n          id = props[\"qucode\"];\n          name = props[\"JDNAME\"] || props[\"unit_name\"];\n          break;\n      }\n      EventBus.$emit(\"showGridDetail\", { gridId: id, gridName: name });\n      // });\n    },\n    // 设置地图的中心\n    setViewGrid() {\n      this.map.setView([39.891909, 116.420366], 12);\n    },\n    // 叠加业务数据层\n    addSecondLayer() {\n      const secondGeoLayer = L.geoJSON(this.secondLayerGeo, {\n        style: this.secondLayerStyle,\n        onEachFeature: this.onEachSecondFeature\n      });\n      this.secondGeoLayer = secondGeoLayer;\n      secondGeoLayer.addTo(this.map);\n    },\n    secondLayerStyle(feature) {\n      if (feature.properties.gridValue > this.criticalValue2) {\n        return {\n          color: \"#F81628\",\n          fillColor: \"#F81628\",\n          weight: 2,\n          fillOpacity: 1\n        };\n      } else if (feature.properties.gridValue > this.criticalValue2) {\n        return {\n          opacity: 1,\n          color: \"#FEFA50\",\n          fillColor: \"#FEFA50\",\n          weight: 2,\n          fillOpacity: 1\n        };\n      } else if (feature.properties.gridValue > this.criticalValue1) {\n        return {\n          opacity: 1,\n          fillColor: \"#1635F6\",\n          weight: 2,\n          fillOpacity: 1\n        };\n      }\n    },\n    // 返回随机数\n    rn(min, max) {\n      var n = parseInt(Math.random() * (max - min) + min);\n      return n;\n    }\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n.basemap {\n  width: 100%;\n  height: 100%;\n}\n\n.map-legend {\n  position: absolute;\n  text-align: center;\n  bottom: 10%;\n  right: 10%;\n  background: rgba(47, 53, 64, 0.8);\n  width: 80px;\n  z-index: 1000;\n  h4 {\n    margin: 0 0 5px;\n    color: #fff;\n  }\n  .map-info {\n    display: flex;\n    align-items: center;\n    margin-top: 6px;\n    margin-left: 5px;\n    .color-area {\n      width: 25px;\n      height: 15px;\n      display: inline-block;\n      margin-right: 6px;\n    }\n    .fontColor {\n      color: #fff;\n    }\n  }\n}\n.goCenter-icon {\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  position: absolute;\n  z-index: 1000;\n  // background: url(\"../assets/img/status/mapCenter.png\") no-repeat center;\n  background-size: contain;\n}\n.gomap-icon {\n  transform: translate(10px, 5px);\n  color: #5195c5;\n  &:hover {\n    color: turquoise;\n  }\n}\n</style>\n<style>\n.leaflet-div-icon {\n  background: transparent !important;\n  border: 1px solid transparent !important;\n}\n.red_point_alert {\n  position: relative;\n  width: 40px;\n  height: 40px;\n  z-index: 100 !important;\n}\n@keyframes warn {\n  0% {\n    transform: scale(0);\n    opacity: 0;\n  }\n\n  25% {\n    transform: scale(0);\n    opacity: 0.1;\n  }\n  30% {\n    transform: scale(0.1);\n    opacity: 0.1;\n  }\n  40% {\n    transform: scale(0.3);\n    opacity: 0.1;\n  }\n\n  50% {\n    transform: scale(0.4);\n    opacity: 0.3;\n  }\n  60% {\n    transform: scale(0.5);\n    opacity: 0.3;\n  }\n\n  75% {\n    transform: scale(0.6);\n    opacity: 0.5;\n  }\n\n  100% {\n    transform: scale(1);\n    opacity: 0;\n  }\n}\n\n/* 保持大小不变的小圆圈  */\n.dot {\n  position: absolute;\n  width: 6px;\n  height: 6px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  -webkit-border-radius: 20px;\n  -moz-border-radius: 20px;\n  border: 2px solid red;\n  border-radius: 20px;\n  z-index: 2;\n}\n\n/* 产生动画（向外扩散变大）的圆圈  */\n.pulse {\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  top: 20%;\n  left: 20%;\n  transform: translate(-50%, -50%);\n  border: 6px solid red;\n  -webkit-border-radius: 30px;\n  -moz-border-radius: 30px;\n  border-radius: 30px;\n  z-index: 1;\n  opacity: 0;\n  -webkit-animation: warn 2s ease-out;\n  -moz-animation: warn 2s ease-out;\n  animation: warn 2s ease-out;\n  -webkit-animation-iteration-count: infinite;\n  -moz-animation-iteration-count: infinite;\n  animation-iteration-count: infinite;\n}\n</style>\n"]}]}