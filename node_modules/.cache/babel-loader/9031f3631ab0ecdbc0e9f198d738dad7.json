{"remainingRequest":"/Users/heyuanpeng/个人项目/grid/node_modules/babel-loader/lib/index.js!/Users/heyuanpeng/个人项目/grid/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/heyuanpeng/个人项目/grid/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/heyuanpeng/个人项目/grid/src/components/gridJudgeRanking.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/heyuanpeng/个人项目/grid/src/components/gridJudgeRanking.vue","mtime":1586942496843},{"path":"/Users/heyuanpeng/个人项目/grid/node_modules/cache-loader/dist/cjs.js","mtime":1573543948041},{"path":"/Users/heyuanpeng/个人项目/grid/node_modules/babel-loader/lib/index.js","mtime":1586942665794},{"path":"/Users/heyuanpeng/个人项目/grid/node_modules/cache-loader/dist/cjs.js","mtime":1573543948041},{"path":"/Users/heyuanpeng/个人项目/grid/node_modules/vue-loader/lib/index.js","mtime":1573543948284}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport IEcharts from \"vue-echarts-v3\";\nimport EventBus from \"../utils/EventBus.js\";\nexport default {\n  name: \"indexRanking\",\n  components: {\n    IEcharts: IEcharts\n  },\n  props: {\n    data: {\n      type: Array\n    },\n    loading: {\n      type: Boolean\n    }\n  },\n  data: function data() {\n    return {};\n  },\n  beforeMount: function beforeMount() {\n    EventBus.$on(\"showMapByshape\", this.showMap);\n  },\n  methods: {\n    showMap: function showMap(instance) {\n      this.$store.state.barInfo = {\n        barName: instance.name,\n        barColor: instance.color,\n        barData: instance.data\n      };\n      EventBus.$emit(\"clearLayerStyle\");\n    }\n  },\n  computed: {\n    rankingTitle: function rankingTitle() {\n      return \"\\u7F51\\u683C\\u8BC4\\u4EF7\\u7EFC\\u5408\\u6392\\u540D\";\n    },\n    // 条形图\n    shape: function shape() {\n      var dataX = this.data.map(function (item) {\n        return item[0];\n      });\n      var dataY = this.data.map(function (item) {\n        return item[1];\n      });\n      var option = {\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: \"shadow\" // 默认为直线，可选为：'line' | 'shadow'\n\n          },\n          // 设置位置\n          position: function position(pos, params, el, elRect, size) {\n            var obj = {\n              top: 10\n            };\n            obj[[\"left\", \"right\"][+(pos[0] < size.viewSize[0] / 2)]] = 14;\n            return obj;\n          }\n        },\n        grid: {\n          left: \"-10%\",\n          right: \"0%\",\n          top: \"13%\",\n          bottom: \"-20%\",\n          containLabel: true\n        },\n        xAxis: [{\n          type: \"category\",\n          data: dataX,\n          axisTick: {\n            show: false,\n            alignWithLabel: true\n          },\n          axisLabel: {\n            interVal: 0,\n            textStyle: {\n              color: \"#626262\",\n              fontSize: \"10\"\n            },\n            formatter: function formatter(value) {\n              var ret = \"\"; //拼接加\\n返回的类目项\n\n              var maxLength = 2; //每项显示文字个数\n\n              var valLength = value.length; //X轴类目项的文字个数\n\n              var rowN = Math.ceil(valLength / maxLength); //类目项需要换行的行数\n\n              if (rowN > 1) {\n                //如果类目项的文字大于3,\n                for (var i = 0; i < rowN; i++) {\n                  var temp = \"\"; //每次截取的字符串\n\n                  var start = i * maxLength; //开始截取的位置\n\n                  var end = start + maxLength; //结束截取的位置 //这里也可以加一个是否是最后一行的判断，但是不加也没有影响，那就不加吧\n\n                  temp = value.substring(start, end) + \"\\n\";\n                  ret += temp; //凭借最终的字符串\n                }\n\n                return ret;\n              } else {\n                return value;\n              }\n            }\n          },\n          axisLine: {\n            show: false\n          }\n        }],\n        yAxis: [{\n          show: false,\n          type: \"value\"\n        }],\n        series: [{\n          name: \"直接访问\",\n          type: \"bar\",\n          barWidth: \"30%\",\n          itemStyle: {\n            normal: {\n              barBorderRadius: 100,\n              label: {\n                show: true,\n                //开启显示\n                position: \"top\",\n                //在上方显示\n                textStyle: {\n                  //数值样式\n                  color: \"color\",\n                  fontSize: 10,\n                  fontWeight: \"bold\"\n                },\n                formatter: function formatter(v) {\n                  var showData = v.data; // return parseInt(showData) === showData\n                  //   ? parseInt(showData)\n                  //   : parseInt(showData).toFixed(2);\n\n                  return Number(showData).toFixed(2);\n                }\n              },\n              color: function color(idx) {\n                var color = [\"#dc4e54\", \"#db8258\", \"#eda350\", \"#a6a34b\", \"#84aa6d\", \"#84abab\"];\n                return color[idx.dataIndex % color.length];\n              }\n            }\n          },\n          data: dataY\n        }]\n      };\n      return option;\n    }\n  }\n};",{"version":3,"sources":["gridJudgeRanking.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"shapeEcharts\">\n    <div class=\"index\">\n      <div class=\"index-top\">\n        <span class=\"left\">{{rankingTitle}}</span>\n        <span class=\"right\">+</span>\n      </div>\n      <div class=\"index-content\">\n        <IEcharts\n          ref=\"echarts\"\n          :option=\"shape\"\n          :loading=\"loading\"\n          :resizable=\"true\"\n          @click=\"showMap\"\n        ></IEcharts>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport IEcharts from \"vue-echarts-v3\";\nimport EventBus from \"../utils/EventBus.js\";\n\nexport default {\n  name: \"indexRanking\",\n  components: {\n    IEcharts\n  },\n  props: {\n    data: {\n      type: Array\n    },\n    loading: {\n      type: Boolean\n    }\n  },\n  data() {\n    return {};\n  },\n  beforeMount() {\n    EventBus.$on(\"showMapByshape\", this.showMap);\n  },\n  methods: {\n    showMap(instance) {\n      this.$store.state.barInfo = {\n        barName: instance.name,\n        barColor: instance.color,\n        barData: instance.data\n      };\n      EventBus.$emit(\"clearLayerStyle\");\n    }\n  },\n  computed: {\n    rankingTitle() {\n      return `网格评价综合排名`;\n    },\n    // 条形图\n    shape() {\n      let dataX = this.data.map(function(item) {\n        return item[0];\n      });\n      let dataY = this.data.map(function(item) {\n        return item[1];\n      });\n      let option = {\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: \"shadow\" // 默认为直线，可选为：'line' | 'shadow'\n          },\n          // 设置位置\n          position: function(pos, params, el, elRect, size) {\n            var obj = { top: 10 };\n            obj[[\"left\", \"right\"][+(pos[0] < size.viewSize[0] / 2)]] = 14;\n            return obj;\n          }\n        },\n        grid: {\n          left: \"-10%\",\n          right: \"0%\",\n          top: \"13%\",\n          bottom: \"-20%\",\n          containLabel: true\n        },\n        xAxis: [\n          {\n            type: \"category\",\n            data: dataX,\n            axisTick: {\n              show: false,\n              alignWithLabel: true\n            },\n            axisLabel: {\n              interVal: 0,\n              textStyle: {\n                color: \"#626262\",\n                fontSize: \"10\"\n              },\n              formatter: function(value) {\n                let ret = \"\"; //拼接加\\n返回的类目项\n                let maxLength = 2; //每项显示文字个数\n                let valLength = value.length; //X轴类目项的文字个数\n                let rowN = Math.ceil(valLength / maxLength); //类目项需要换行的行数\n                if (rowN > 1) {\n                  //如果类目项的文字大于3,\n                  for (let i = 0; i < rowN; i++) {\n                    let temp = \"\"; //每次截取的字符串\n                    let start = i * maxLength; //开始截取的位置\n                    var end = start + maxLength; //结束截取的位置 //这里也可以加一个是否是最后一行的判断，但是不加也没有影响，那就不加吧\n                    temp = value.substring(start, end) + \"\\n\";\n                    ret += temp; //凭借最终的字符串\n                  }\n                  return ret;\n                } else {\n                  return value;\n                }\n              }\n            },\n            axisLine: {\n              show: false\n            }\n          }\n        ],\n        yAxis: [\n          {\n            show: false,\n            type: \"value\"\n          }\n        ],\n        series: [\n          {\n            name: \"直接访问\",\n            type: \"bar\",\n            barWidth: \"30%\",\n            itemStyle: {\n              normal: {\n                barBorderRadius: 100,\n                label: {\n                  show: true, //开启显示\n                  position: \"top\", //在上方显示\n                  textStyle: {\n                    //数值样式\n                    color: \"color\",\n                    fontSize: 10,\n                    fontWeight: \"bold\"\n                  },\n                  formatter: function(v) {\n                    let showData = v.data;\n                    // return parseInt(showData) === showData\n                    //   ? parseInt(showData)\n                    //   : parseInt(showData).toFixed(2);\n                    return Number(showData).toFixed(2);\n                  }\n                },\n                color: function(idx) {\n                  var color = [\n                    \"#dc4e54\",\n                    \"#db8258\",\n                    \"#eda350\",\n                    \"#a6a34b\",\n                    \"#84aa6d\",\n                    \"#84abab\"\n                  ];\n                  return color[idx.dataIndex % color.length];\n                }\n              }\n            },\n            data: dataY\n          }\n        ]\n      };\n      return option;\n    }\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n.shapeEcharts {\n  margin-top: 1rem;\n  .index {\n    width: 100%;\n    margin-bottom: 1rem;\n    .index-top {\n      height: 2rem;\n      line-height: 2rem;\n      vertical-align: middle;\n      background: #3a404e;\n      .left {\n        padding-left: 0.5rem;\n      }\n      .right {\n        float: right;\n        margin-right: 1rem;\n      }\n    }\n    .index-content {\n      font-size: 14px;\n      height: 13rem;\n      padding: 1rem;\n      background: #242c3b;\n      span {\n        font-size: 16px;\n        font-weight: 600;\n        color: #ffc000;\n        margin: 0 0.2rem;\n      }\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/components"}]}